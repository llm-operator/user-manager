// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package legacy

import (
	context "context"
	v1 "github.com/llm-operator/user-manager/api/v1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UsersInternalServiceClient is the client API for UsersInternalService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UsersInternalServiceClient interface {
	ListInternalAPIKeys(ctx context.Context, in *v1.ListInternalAPIKeysRequest, opts ...grpc.CallOption) (*v1.ListInternalAPIKeysResponse, error)
	ListInternalOrganizations(ctx context.Context, in *v1.ListInternalOrganizationsRequest, opts ...grpc.CallOption) (*v1.ListInternalOrganizationsResponse, error)
	ListOrganizationUsers(ctx context.Context, in *v1.ListOrganizationUsersRequest, opts ...grpc.CallOption) (*v1.ListOrganizationUsersResponse, error)
	ListProjects(ctx context.Context, in *v1.ListProjectsRequest, opts ...grpc.CallOption) (*v1.ListProjectsResponse, error)
	ListProjectUsers(ctx context.Context, in *v1.ListProjectUsersRequest, opts ...grpc.CallOption) (*v1.ListProjectUsersResponse, error)
}

type usersInternalServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersInternalServiceClient(cc grpc.ClientConnInterface) UsersInternalServiceClient {
	return &usersInternalServiceClient{cc}
}

func (c *usersInternalServiceClient) ListInternalAPIKeys(ctx context.Context, in *v1.ListInternalAPIKeysRequest, opts ...grpc.CallOption) (*v1.ListInternalAPIKeysResponse, error) {
	out := new(v1.ListInternalAPIKeysResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.users.server.v1.UsersInternalService/ListInternalAPIKeys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersInternalServiceClient) ListInternalOrganizations(ctx context.Context, in *v1.ListInternalOrganizationsRequest, opts ...grpc.CallOption) (*v1.ListInternalOrganizationsResponse, error) {
	out := new(v1.ListInternalOrganizationsResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.users.server.v1.UsersInternalService/ListInternalOrganizations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersInternalServiceClient) ListOrganizationUsers(ctx context.Context, in *v1.ListOrganizationUsersRequest, opts ...grpc.CallOption) (*v1.ListOrganizationUsersResponse, error) {
	out := new(v1.ListOrganizationUsersResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.users.server.v1.UsersInternalService/ListOrganizationUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersInternalServiceClient) ListProjects(ctx context.Context, in *v1.ListProjectsRequest, opts ...grpc.CallOption) (*v1.ListProjectsResponse, error) {
	out := new(v1.ListProjectsResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.users.server.v1.UsersInternalService/ListProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersInternalServiceClient) ListProjectUsers(ctx context.Context, in *v1.ListProjectUsersRequest, opts ...grpc.CallOption) (*v1.ListProjectUsersResponse, error) {
	out := new(v1.ListProjectUsersResponse)
	err := c.cc.Invoke(ctx, "/llmoperator.users.server.v1.UsersInternalService/ListProjectUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersInternalServiceServer is the server API for UsersInternalService service.
// All implementations must embed UnimplementedUsersInternalServiceServer
// for forward compatibility
type UsersInternalServiceServer interface {
	ListInternalAPIKeys(context.Context, *v1.ListInternalAPIKeysRequest) (*v1.ListInternalAPIKeysResponse, error)
	ListInternalOrganizations(context.Context, *v1.ListInternalOrganizationsRequest) (*v1.ListInternalOrganizationsResponse, error)
	ListOrganizationUsers(context.Context, *v1.ListOrganizationUsersRequest) (*v1.ListOrganizationUsersResponse, error)
	ListProjects(context.Context, *v1.ListProjectsRequest) (*v1.ListProjectsResponse, error)
	ListProjectUsers(context.Context, *v1.ListProjectUsersRequest) (*v1.ListProjectUsersResponse, error)
	mustEmbedUnimplementedUsersInternalServiceServer()
}

// UnimplementedUsersInternalServiceServer must be embedded to have forward compatible implementations.
type UnimplementedUsersInternalServiceServer struct {
}

func (UnimplementedUsersInternalServiceServer) ListInternalAPIKeys(context.Context, *v1.ListInternalAPIKeysRequest) (*v1.ListInternalAPIKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInternalAPIKeys not implemented")
}
func (UnimplementedUsersInternalServiceServer) ListInternalOrganizations(context.Context, *v1.ListInternalOrganizationsRequest) (*v1.ListInternalOrganizationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListInternalOrganizations not implemented")
}
func (UnimplementedUsersInternalServiceServer) ListOrganizationUsers(context.Context, *v1.ListOrganizationUsersRequest) (*v1.ListOrganizationUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrganizationUsers not implemented")
}
func (UnimplementedUsersInternalServiceServer) ListProjects(context.Context, *v1.ListProjectsRequest) (*v1.ListProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjects not implemented")
}
func (UnimplementedUsersInternalServiceServer) ListProjectUsers(context.Context, *v1.ListProjectUsersRequest) (*v1.ListProjectUsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListProjectUsers not implemented")
}
func (UnimplementedUsersInternalServiceServer) mustEmbedUnimplementedUsersInternalServiceServer() {}

// UnsafeUsersInternalServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UsersInternalServiceServer will
// result in compilation errors.
type UnsafeUsersInternalServiceServer interface {
	mustEmbedUnimplementedUsersInternalServiceServer()
}

func RegisterUsersInternalServiceServer(s grpc.ServiceRegistrar, srv UsersInternalServiceServer) {
	s.RegisterService(&UsersInternalService_ServiceDesc, srv)
}

func _UsersInternalService_ListInternalAPIKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListInternalAPIKeysRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersInternalServiceServer).ListInternalAPIKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.users.server.v1.UsersInternalService/ListInternalAPIKeys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersInternalServiceServer).ListInternalAPIKeys(ctx, req.(*v1.ListInternalAPIKeysRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersInternalService_ListInternalOrganizations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListInternalOrganizationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersInternalServiceServer).ListInternalOrganizations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.users.server.v1.UsersInternalService/ListInternalOrganizations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersInternalServiceServer).ListInternalOrganizations(ctx, req.(*v1.ListInternalOrganizationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersInternalService_ListOrganizationUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListOrganizationUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersInternalServiceServer).ListOrganizationUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.users.server.v1.UsersInternalService/ListOrganizationUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersInternalServiceServer).ListOrganizationUsers(ctx, req.(*v1.ListOrganizationUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersInternalService_ListProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersInternalServiceServer).ListProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.users.server.v1.UsersInternalService/ListProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersInternalServiceServer).ListProjects(ctx, req.(*v1.ListProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersInternalService_ListProjectUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListProjectUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersInternalServiceServer).ListProjectUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/llmoperator.users.server.v1.UsersInternalService/ListProjectUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersInternalServiceServer).ListProjectUsers(ctx, req.(*v1.ListProjectUsersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UsersInternalService_ServiceDesc is the grpc.ServiceDesc for UsersInternalService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UsersInternalService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "llmoperator.users.server.v1.UsersInternalService",
	HandlerType: (*UsersInternalServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListInternalAPIKeys",
			Handler:    _UsersInternalService_ListInternalAPIKeys_Handler,
		},
		{
			MethodName: "ListInternalOrganizations",
			Handler:    _UsersInternalService_ListInternalOrganizations_Handler,
		},
		{
			MethodName: "ListOrganizationUsers",
			Handler:    _UsersInternalService_ListOrganizationUsers_Handler,
		},
		{
			MethodName: "ListProjects",
			Handler:    _UsersInternalService_ListProjects_Handler,
		},
		{
			MethodName: "ListProjectUsers",
			Handler:    _UsersInternalService_ListProjectUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/v1/legacy/user_manager_service.proto",
}
