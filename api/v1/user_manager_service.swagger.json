{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/user_manager_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UsersService"
    },
    {
      "name": "UsersInternalService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/organizations": {
      "get": {
        "operationId": "UsersService_ListOrganizations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOrganizationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Organization"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/organizations/{organizationId}/users:addUser": {
      "post": {
        "operationId": "UsersService_AddUserToOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AddUserToOrganizationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersServiceAddUserToOrganizationBody"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/api_keys": {
      "get": {
        "operationId": "UsersService_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAPIKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ]
      },
      "post": {
        "operationId": "UsersService_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1APIKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAPIKeyRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/api_keys/{id}": {
      "delete": {
        "operationId": "UsersService_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteAPIKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    }
  },
  "definitions": {
    "UsersServiceAddUserToOrganizationBody": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1APIKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secret": {
          "type": "string",
          "description": "secret is populated only when a new API key is created."
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "organization": {
          "$ref": "#/definitions/v1Organization"
        }
      }
    },
    "v1AddUserToOrganizationResponse": {
      "type": "object"
    },
    "v1CreateAPIKeyRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1CreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "v1DeleteAPIKeyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        }
      }
    },
    "v1DeleteOrganizationResponse": {
      "type": "object"
    },
    "v1ListAPIKeysResponse": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1APIKey"
          }
        }
      }
    },
    "v1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Organization"
          }
        }
      }
    },
    "v1Organization": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  }
}
